#+TITLE: Overview for Minesweeper Project
* Model
** cellEnum
** GameCell Class
*** Instance Variables
**** id field
**** currentState field
**** beenPressed Field
*** Methods
**** setPressed()
** GameBoard
*** Instance Variables
**** boardWidth
**** boardHeight
**** gameBoard Array
*** Methods
**** init
**** setBombs
**** revealGrids (Needs Refactoring)
**** resetGrid()
**** getGameBoard (Debug)
**** printBoard (Debug)
** GameInstance Class
*** Instance Variables
**** Variable that holds the game container element
**** Variable that holds the board size
**** Variable that holds the difficulty setting
**** Variable that holds the time taken
**** Variable that holds the number of bombs remaining
*** Methods
**** change board size
**** update game view
* View (The Actual HTML Page)
** Needs
*** Function that updates the dimensions of the game according to the size of the grid
*** Function that marks the current bomb count of a cell
*** Function that resets the cells and their css
*** Function that marks a game cell as pressed (maybe)

* Things todo
** TODO Fix bug in labeling the number of bombs around a tile
** TODO Add in the functionality for the time and the score
** TODO Add in the funcitonality for changing the size of the grid

* Minesweeper Info
Beginner has a total of ten mines and the board size is either 8 × 8, 9 × 9, or 10 × 10.
Intermediate has 40 mines and also varies in size between 13 × 15 and 16 × 16. Finally,
expert has 99 mines and is always 16 × 30 (or 30 × 16)

* Todo
1. Fix the new constructor or the GameInstance class
2. Make a method that gets all the game settings ready according to the imported game settings
   
* toggleFlagOn(cellID)
#+BEGIN_SRC javascript
  toggleFlagOn(cellID) {
	  if (this.isGameOver || this.gameBoard.cellArray[cellID].beenPressed)
		  return;

	  let targetCell = document.querySelector(`#cell-${cellID}`);

	  if (targetCell.innerText != "F") {
		  if (this.bombsRemaining != 0) {
			  //targetCell.innerHTML = "<img class='cell-icon' src='img/flag-icon.png'/>";
			  targetCell.innerText = "F";
			  this.bombsRemaining--;
		  }
	  } else {
		  targetCell.innerText = "";
		  this.bombsRemaining += 1;
	  }

	  this.bombsScreen.innerText = this.bombsRemaining;

  }
#+END_SRC
